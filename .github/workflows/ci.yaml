name: ci

on:
  push:
    paths:
    - 'src/**'
    - 'templates/**'
    - 'Cargo.*'
    - 'Dockerfile'
    - '.github/workflows/ci.yaml'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/kasuboski/feedreader
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      # get a specific version for the remote buildx driver
      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@v1
        with:
          version: https://github.com/docker/buildx.git#92009ed03cef7259792f544e1fc6d97214b8e64a

      - name: Store certs
        shell: bash
        env:
          CA_CERT: ${{ secrets.BUILDKIT_CA }}
          CLIENT_CERT: ${{ secrets.BUILDKIT_CLIENT_CERT }}
          CLIENT_KEY: ${{ secrets.BUILDKIT_CLIENT_KEY }}
        run: |
          echo "$CA_CERT" > ca_cert.pem
          echo "$CLIENT_CERT" > client_cert.pem
          echo "$CLIENT_KEY" > key.pem

      - name: "Append ARM buildkit builder"
        shell: bash
        run: |
          docker buildx create --append --name ${{ steps.builder.outputs.name }} \
              --node arm \
              --platform linux/arm64 \
              --driver remote \
              --driver-opt key="$GITHUB_WORKSPACE/key.pem" \
              --driver-opt cert="$GITHUB_WORKSPACE/client_cert.pem" \
              --driver-opt cacert="$GITHUB_WORKSPACE/ca_cert.pem" \
              tcp://buildkitd:1234

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/kasuboski/feedreader:buildcache
          cache-to: type=registry,ref=ghcr.io/kasuboski/feedreader:buildcache,mode=max
